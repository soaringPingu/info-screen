import sysimport datetime     # time of day etc.# imports related to web scrapingimport bs4 as bs4import requestsimport urllib3.requestfrom bs4 import BeautifulSoup# Use PySide2 to allow direct use of Qt UI filesfrom PyQt5.QtWidgets import QApplication, QMainWindowfrom PyQt5.QtCore import QTimer# import the GUIfrom ui_gösta import Ui_MainWindowclass MainWindow(QMainWindow):    def __init__(self):        super(MainWindow, self).__init__()        self.ui = Ui_MainWindow()        self.ui.setupUi(self)        # Timers for fast and slow data updates        self.fast_timer = QTimer()        self.fast_timer.setInterval(500)   # 0.5 seconds        self.fast_timer.timeout.connect(self.update_data_fast)        self.fast_timer.start()        self.slow_timer = QTimer()        self.slow_timer.setInterval(30000)  # 30 seconds        self.slow_timer.timeout.connect(self.update_data_slow)        self.slow_timer.start()        # Web scraping definitions        # Link to best information so far for connecting widgets to code:        # https://ethicalhackingguru.com/getting-started-building-a-python-gui-using-pyqt5/        # Set up actions on events below this line        # self.ui.minutes_per_km_cbox.currentIndexChanged.connect(self.update_data)        # self.ui.rwr_distance_dspin.textChanged.connect(self.update_data)        # self.ui.minute_per_km_spin.textChanged.connect(self.update_data)        # self.ui.seconds_per_km_spin.textChanged.connect(self.update_data)        # Update the screen information once regardless of events        # self.update_data()    def update_data_fast(self):        # TODO update all time info (all the time)        days = ["Måndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "Lördag", "Söndag"]        months = ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober",                  "November", "December"]        now = datetime.datetime.now()        self.ui.se_time_label.setText(f"{now.hour}:{now.minute:02}:{now.second:02}")        self.ui.se_day_label.setText(f"{days[now.weekday()]}")        self.ui.se_date_label.setText(f"{now.day}")        self.ui.se_month_label.setText(f"{months[now.month - 1]}")        # TODO get the number of minutes left for a bus to arrive/leave    def update_data_slow(self):        # TODO get weather        # based on information from        # https://towardsdatascience.com/how-to-web-scrape-with-python-in-4-minutes-bc49186a8460        url = "https://www.smhi.se/q/Sundborn/Falun/2670900"        response = requests.get(url)        print(response)        # TODO get bus info    def get_new_quote(self):        # TODO get new quote information        test = 0if __name__ == "__main__":    app = QApplication(sys.argv)    window = MainWindow()    window.show()#    while(True):#        window.update_data_fast()#        time.sleep(0.5)    sys.exit(app.exec_())